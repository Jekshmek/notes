http://www.slideshare.net/djspiewak/high-wizardry-in-the-land-of-scala
https://vimeo.com/28793245
https://vimeo.com/13518456

trait Num[A] {
    val zero: A

    def add(x: A, y: A): A
}

def sum[A](nums: List[A]))(tc: Num[A]) = 
    nums.foldLeft(tc.zero)(tc.add)

-- adopters for Int and double

object IntNum extends Num[Int] {
    val zero = 0

    def add(x: Int, y: Int) = x + y
}

object DoubleNum extends Num[Double] {
    val zero = 0d

    def add(x: Double, y: Double) = x + y
}


