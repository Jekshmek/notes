https://docs.spring.io/spring-framework/docs/current/javadoc-api/org/springframework/test/web/client/MockRestServiceServer.html

import org.junit.Test;
import org.junit.runner.RunWith;
import org.springframework.boot.test.context.SpringBootTest;
import org.springframework.test.context.junit4.SpringRunner;

@RunWith(SpringRunner.class)
@SpringBootTest
public class DemoApplicationTests {
    @Test
    public void contextLoads() {
    }
}

@RunWith(SpringRunner.class)
@SpringBootTest(webEnvironment = SpringBootTest.WebEnvironment.NONE)
@AutoConfigureWireMock(port = 6543) // start WireMock on a fixed port
public class CustomerRentalHistoryClientTests {
    @Test
    public void should_respond_ok_when_foo_endpoint_exists() {
        // the Legacy Service is doing the stubbing so WireMock will act as we told it to
        WireMock.stubFor(WireMock.get(WireMock.urlEqualTo("/foo"))
            .willReturn(WireMock.aResponse().withBody("OK").withStatus(200)));

        ResponseEntity<String> entity = new RestTemplate()
            .getForEntity("http://localhost:6543/foo", String.class);

        BDDAssertions.then(entity.getStatusCode().value()).isEqualTo(200);
        BDDAssertions.then(entity.getBody()).isEqualTo("OK");
    }
}
