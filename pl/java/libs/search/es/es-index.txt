update settings (realtime):

http://www.elasticsearch.org/guide/en/elasticsearch/reference/current/indices-update-settings.html

index.blocks.read_only
    Set to true to have the index read only, false to allow writes and metadata changes. 
index.blocks.read
    Set to true to disable read operations against the index. 
index.blocks.write
    Set to true to disable write operations against the index. 
index.blocks.metadata
    Set to true to disable metadata operations against the index. 

XPUT/my_index/_settings' -d '
{ "index" : {
   "blocks.read_only" : true
} }


assertTrue(client.admin().indices().prepareUpdateSettings(indexName)
    .setSettings(settingsBuilder().put(IndexMetaData.SETTING_READ_ONLY, true))
    .get().isAcknowledged());


field data cache:

http://www.elasticsearch.org/guide/en/elasticsearch/reference/master/index-modules-fielddata.html
http://www.elasticsearch.org/guide/en/elasticsearch/reference/current/fielddata-formats.html

Bulk indexing:

http://www.elasticsearch.org/guide/en/elasticsearch/client/java-api/master/bulk.html

index scaleability:

http://www.elasticsearch.org/guide/en/elasticsearch/guide/current/scale.html

https://gibrown.wordpress.com/2014/01/09/scaling-elasticsearch-part-1-overview/
https://gibrown.wordpress.com/2014/02/06/scaling-elasticsearch-part-2-indexing/
https://gibrown.wordpress.com/2014/08/12/scaling-elasticsearch-part-3-queries/


index settings:

http://www.slideshare.net/kjunine/indices-apis-elasticsearch-reference

Create index with mappings
curl -XPUT 'localhost:9200/docs' -d @mappings.json

http://www.elasticsearch.org/guide/en/elasticsearch/reference/current/indices-update-settings.html

curl -XPOST 'http://localhost:9200/test/_optimize?max_num_segments=5'


+ masternode (link by multi/uni cast)

http://www.elasticsearch.org/blog/changing-mapping-with-zero-downtime/
http://stackoverflow.com/questions/22304776/how-to-scale-write-and-indexs-size-dynamically-with-elasticsearch

http://www.elasticsearch.org/guide/en/elasticsearch/reference/current/index-modules-allocation.html
http://www.elasticsearch.org/guide/en/elasticsearch/reference/current/index-modules-merge.html
http://www.elasticsearch.org/guide/en/elasticsearch/reference/current/index-modules-store.html
http://www.elasticsearch.org/guide/en/elasticsearch/reference/current/index-modules-slowlog.html
  !!! slow search log settings

custom metadata:
http://www.elasticsearch.org/guide/en/elasticsearch/reference/current/mapping-meta.html
https://github.com/elasticsearch/elasticsearch/issues/1649
  After discussion, this could simply be implemented by using a type meta and storing one document in it. Closing


reindexing:

???
http://www.elasticsearch.org/guide/en/elasticsearch/guide/current/reindex.html
http://www.elasticsearch.org/guide/en/elasticsearch/guide/current/overallocation.html


rerouting:

src/test/java
org.elasticsearch.search.basic.SearchWhileRelocatingTests:

client().admin().cluster().prepareReroute().get();
// this might time out on some machines if they are really busy and you hit lots of throttling
ClusterHealthResponse resp = client().admin().cluster().prepareHealth().setWaitForRelocatingShards(0).setTimeout("5m").get();


