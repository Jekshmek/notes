https://doc.rust-lang.org/stable/book/ownership.html

Articles:
https://m-decoster.github.io//2017/01/16/fighting-borrowchk/
http://always-learning.timmcnamara.nz/2016/10/15/borrow-checker-escape-hatches/
https://ricardomartins.cc/2016/06/08/interior-mutability

Crates:
https://github.com/m-labs/rust-managed
https://crates.io/crates/managed

Samples:
https://www.reddit.com/r/rust/comments/58yukd/if_rust_ensures_that_there_is_exactly_one_binding/

need weak reference counting for graphs with cycles in it. Here's how to do a generic binary tree in Rust.

enum Node<T> {
    Leaf(T),
    Inner(Box<Node<T>>, Box<Node<T>>),
}
