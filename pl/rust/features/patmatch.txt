https://rust-lang.github.io/book/second-edition/ch18-03-pattern-syntax.html

https://www.reddit.com/r/rust/comments/5n5jt8/matching_enums/
https://www.reddit.com/r/rust/comments/58vkfo/when_ignoring_in_pattern_matching_why_do_we_need/

ergonomics:
https://github.com/rust-lang/rfcs/blob/master/text/2005-match-ergonomics.md
https://www.reddit.com/r/rust/comments/6h89kb/match_ergonomics_rfc_has_been_accepted/

slice patterns (from 1.26)

let arr = [1, 2, 3];
match arr {
    [1, _, _] => "starts with one",
    [a, b, c] => "starts with something else",
}

fn foo(s: &[u8]) {
    match s {
        [a, b] => (),
        [a, b, c] => (),
        _ => (),
    }
}
