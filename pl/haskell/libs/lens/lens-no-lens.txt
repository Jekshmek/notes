{-# LANGUAGE RankNTypes -#}

import Control.Applicative

type Lens  s t a b = forall f. Functor f => (a -> f b) -> s -> f t

type Lens' s   a   = forall f. Functor f => (a -> f a) -> s -> f s

_2 :: Lens (c,a) (c,b) a b

_2 f (c, a) = (,) c <$> f a

-- :t _2
-- _2 :: Functor f => (a -> f b) -> (c, a) -> f (c, b)

view :: ((a -> Const a b) -> s -> Const a t) -> s -> a
view l s = getConst (l Const s)
