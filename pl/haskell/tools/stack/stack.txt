https://www.fpcomplete.com/blog/2015/08/new-in-depth-guide-stack
https://www.fpcomplete.com/blog/2015/08/stack-ghc-windows
http://ruhaskell.org/posts/utils/2015/07/13/from-cabal-to-stack.html

download/releases:
https://github.com/commercialhaskell/stack/releases

stack-arch:
https://aur.archlinux.org/packages/haskell-stack/
https://aur.archlinux.org/packages/libtinfo

docs:
http://docs.haskellstack.org/en/stable/index.html
https://github.com/commercialhaskell/stack/tree/stable/doc

guide:
https://github.com/commercialhaskell/stack/blob/stable/doc/GUIDE.md
http://docs.haskellstack.org/en/stable/GUIDE.html


https://www.fpcomplete.com/blog/2015/09/stack-more-binary-package-sharing

/home/vagrant/.stack/precompiled/ghc-7.10.2/1.22.4.0/aeson-0.8.0.2/Vr6rCTNr+UeoWMN1qGJGhFfxIDSFqTgJixKuD6TtVEQ\=

This encodes the GHC version, Cabal version, package name, and package version.
The last bit is a hash of all of the configuration information, including flags, GHC options, and dependencies.
We then hash those flags and put them in the filepath, ensuring that when we look up a precompiled package,
we're getting something that matches what we'd be building ourselves now.


stack\src\Stack\Constants.hs

STACK_ROOT env var


http://duplode.github.io/posts/migrating-a-project-to-stack.html

Reference the commits in the remote GitHub repository in stack.yaml.
A typical entry for a Git commit in the packages section looks like this:

location:
    git: https://github.com/duplode/zip-conduit
    commit: 1eefc8bd91d5f38b760bce1fb8dd16d6e05a671d
    extra-dep: true


build command:
https://github.com/commercialhaskell/stack/wiki/Build-command


LTS:
http://www.stackage.org/
https://github.com/fpco/lts-haskell
http://www.stackage.org/lts-3.0

LTS Setup guide:

Edit your stack.yaml and set the following:
resolver: lts-3.0
You can also use --resolver lts-3.0 on the command line

!!!TODO:
http://ruhaskell.org/posts/utils/2015/08/19/stack-and-yesod.html

~/.stack/global/stack.yaml
set resolver to 3.1
stack install cabal-install-1.22.6.0


stack new <prj-name> simple --resolver lts-3.2
...
stack build

stack exec <prj-name>


stack init ...
    tries to find appropriate lts-<ver>

stack solver --modify-stack-yaml --no-system-ghc
    ???

stack build
    --no-system-ghc
    --flag <flag-name>
    --haddock


config:
/root/.stack
    global stack root
