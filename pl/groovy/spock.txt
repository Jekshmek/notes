spock mvn repo:
http://mvnrepository.com/artifact/org.spockframework/spock-core

spock docs:
http://spockframework.github.io/spock/javadoc/1.0/index.html


http://spockframework.github.io/spock/docs/1.0/index.html

http://spockframework.github.io/spock/docs/1.0/spock_primer.html
http://spockframework.github.io/spock/docs/1.0/release_notes.html

http://spockframework.github.io/spock/docs/1.0/migration_guide.html

To avoid such problems, use HamcrestSupport.that:
...



Presentations/Talks:
https://github.com/spockframework/spock-talks/blob/master/talks/next-level/src/slides/01-intro.md
https://github.com/spockframework/spock-talks/blob/master/talks/next-level/src/slides/04-gems.md
https://github.com/spockframework/spock-talks/blob/master/talks/next-level/src/slides/05-future.md

Ship - Spock - A Highly Logical Way to Test:
http://www.infoq.com/presentations/spock

gradle int-n:
compile('org.codehaus.groovy:groovy-all:2.3.11')

testCompile('org.spockframework:spock-core:1.0-groovy-2.3')
testCompile('org.spockframework:spock-spring:1.0-groovy-2.3')

Modules:
http://spockframework.github.io/spock/docs/1.0/modules.html

Extensions:
http://spockframework.github.io/spock/docs/1.0/extensions.html

@IgnoreRest
@IgnoreIf
@Stepwise
@AutoCleanup
@AutoCleanup("dispose")
@AutoCleanup(quiet = true)
@Title("This is blah-blah spec") / @Narrative
@Issue("http://jira-issue")
@Rule
@Subject - ???
??? custom ext

spock-spring ext:
@Autowired
@Resource

Interaction/Mocking
http://spockframework.github.io/spock/docs/1.0/interaction_based_testing.html


feature method blocks:
setup/given
expect
    no side-effects, just inputs and results, contains only conditions and variable definitions
when
then
    tests code with side effects
cleanup
    always invoked even if previous exceptions
where
    must be the last block, contains table-like data
    can use | or || as separator

@Unroll
def "crew member name: '#name' length: #length"() {
    expect:
        name.length() == length
    where:
        name     | length
        "Spock"  | 5
        "Kirk"   | 4
        "Scotty" | 6
}
...
    where:
        name << ["Spock", "Kirk", "Scotty"]
        length << [5, 4, 6]
...
        name << sql.execute("select name, age, sex from customer")
        length = name.length() // derived value
...

Fields:
simple fields are new for each feature method.
@Shared
    shared


Fixture methods:
def setup() {...}
def cleanup() {...}

def setupSpec() {...}
def cleanupSpec() {...}
- may only access @Shared and static fields


Configuration:

~/.spock/SpockConfig.groovy or on CP or with -Dspock.configuration

runner {
    filterStackTrace false
    include Fast
    exclude Slow
    optimizeRunOrder true
}

@Fast
class MyFastSpec extends Specification {
    def "I'm really fast!"() { expect: true }
    @Slow
    def "sorry but I'm slow"() { expect: false }
}

